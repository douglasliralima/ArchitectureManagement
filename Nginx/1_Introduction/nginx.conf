# Fazendo o load desse módulo, temos acesso ao js_import e js_content para usar o js no nosso nginx
load_module /usr/lib/nginx/modules/ngx_http_js_module.so;

# Todo servidor precisa de algumas coisas básicas:
    # - A porta em que ela estará transmitindo as coisas
    # - Os arquivos estáticos que serão servidos(Html, Css e Js)
    # - Precisamos especificar que estamos na 7º camada(HTML)

# TOdas as configurações do servidor vão estar dentro desse block directive
http {
    #Podemos importar Js
    js_import /JavaScript/hello.js;

    # outro block directive, só que do nosso server
    server {
        # essa é a port directive
        listen 8080;
        # Aqui é onde nos especifcamos o caminho da raiz, é importante que essa raiz seja um html nomeado index
        root /etc/nginx/html/;

        # Com isso é possível acessar http://localhost:8000/images/netero.jpg, mas não images direto, pois não pode
        # ser servido a pasta total
        location /images {
            root /;
        }

        #Podemos ter expressões regulares em nosso nginx '.' = qualquer coisa | '$' = simboliza o final da string
        # Aqui nos temos um caminho qualquer que quando terminado com hello, nos dará o hello world
        location ~ hello.*$ {
            js_content hello;
        }
    }

    # Nos podemos configurar vários servidores em um mesmo nginx
    server {
        listen 8888;
        
        # Aqui é importante saber que ele fará o proxy_pass baseado na rede docker, ao subir com ele, e tentar
        # acessar o localhost, por isso estamos fazendo o proxy para a porta 8080 e não para a 8000
        location / {
            # Aqui o nginx já implementa um sistema de cache no proxy, veja no recarregar da página o cache
            # entrando em ação ao atualizar o html
            proxy_pass localhost:8080;
        }

        # Podemos tambem fazer o proxy para basicamente qualquer site
        location /hello-example {
            proxy_pass http://nginx.org/en/docs/njs/examples.html;
        }
    }
}

# Essa directive é obrigatória de ser criada, mesmo que não tenha uso
events {
    
}